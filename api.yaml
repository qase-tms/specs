openapi: 3.0.0
info:
  title: Qase.io API
  description: |
    You can use our API to access Qase.io API endpoints,
    which allows to retrieve information about entities
    stored in database and perform actions with them.
    The API is organized around REST.
  termsOfService: 'https://qase.io/terms'
  version: 1.0.0
  contact:
    name: Qase.io
    url: 'https://qase.io'
    email: support@qase.io
  license:
    name: Apache 2.0
    url: 'https://github.com/qase-tms/specs/blob/master/LICENSE'
externalDocs:
  url: 'https://developers.qase.io'
  description: Qase.io API Reference
tags:
  - name: projects
  - name: search
  - name: custom-fields
servers:
  - url: 'https://api.qase.io/v1'
    description: The production API server.
  - url: 'https://dev.qase.io/v1'
    description: The development API server.
paths:
  '/custom_field/{id}':
    get:
      operationId: get-custom-field
      tags:
        - custom-fields
      summary: Get Custom Field by id.
      description: |
        This method allows to retrieve custom field.
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A Custom Field.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldResponse'
    delete:
      operationId: delete-custom-field
      tags:
        - custom-fields
      summary: Delete Custom Field by id.
      description: |
        This method allows to delete custom field.
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: Custom Field removal result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    patch:
      operationId: update-custom-field
      tags:
        - custom-fields
      summary: Update Custom Field by id.
      description: |
        This method allows to update custom field.
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldUpdate'
      responses:
        '200':
          description: Custom Field update result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /custom_field:
    get:
      operationId: custom-fields
      tags:
        - custom-fields
      summary: Get all Custom Fields.
      description: |
        This method allows to retrieve and filter custom fields.
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - name: filters
          in: query
          style: deepObject
          schema:
            type: object
            properties:
              entity:
                type: string
                enum:
                  - case
                  - run
                  - defect
              type:
                type: string
                enum:
                  - string
                  - text
                  - number
                  - checkbox
                  - selectbox
                  - radio
                  - multiselect
                  - url
                  - user
                  - datetime
      responses:
        '200':
          description: Custom Field list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldsResponse'
    post:
      operationId: create-custom-field
      tags:
        - custom-fields
      summary: Create new Custom Field.
      description: |
        This method allows to create custom field.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldCreate'
      responses:
        '200':
          description: Created Custom Field id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  /project:
    get:
      operationId: get-projects
      tags:
        - projects
      summary: Get All Projects.
      description: |
        This method allows to retrieve all projects available
        for your account. You can you limit and offset params
        to paginate.
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: A list of all projects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResponse'
    post:
      operationId: create-project
      tags:
        - projects
      summary: Create new project.
      description: |
        This method is used to create a new project through API.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
      responses:
        '200':
          description: A result of project creation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCodeResponse'
  '/project/{code}':
    get:
      operationId: get-project
      tags:
        - projects
      summary: Get Project by code.
      description: |
        This method allows to retrieve a specific project.
      parameters:
        - $ref: '#/components/parameters/Code'
      responses:
        '200':
          description: A Project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
    delete:
      operationId: delete-project
      tags:
        - projects
      summary: Delete Project by code.
      description: |
        This method allows to delete a specific project.
      parameters:
        - $ref: '#/components/parameters/Code'
      responses:
        '200':
          description: A result of project removal.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  '/project/{code}/access':
    post:
      operationId: grant-access-to-project
      tags:
        - projects
      summary: Grant access to project by code.
      description: |
        This method allows to grant access to a specific project.
      parameters:
        - $ref: '#/components/parameters/Code'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectAccess'
      responses:
        '200':
          description: Result of operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      operationId: revoke-access-to-project
      tags:
        - projects
      summary: Revoke access to project by code.
      description: |
        This method allows to revoke access to a specific project.
      parameters:
        - $ref: '#/components/parameters/Code'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectAccess'
      responses:
        '200':
          description: Result of operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /search:
    get:
      operationId: search
      tags:
        - search
      summary: Search entities by Qase Query Language.
      description: |
        This method allows to retrieve data sets for various
        entities using expressions with conditions.
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - name: query
          in: query
          description: Expression in Qase Query Language.
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 1000
      responses:
        '200':
          description: A list of found entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
components:
  schemas:
    Attachment:
      type: object
      properties:
        size:
          type: integer
        mime:
          type: string
        filename:
          type: string
        url:
          type: string
          format: uri
    CustomField:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        entity:
          type: string
        type:
          type: string
        placeholder:
          type: string
          nullable: true
        default_value:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        is_required:
          type: boolean
        is_visible:
          type: boolean
        is_filterable:
          type: boolean
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
          nullable: true
        projects_codes:
          type: array
          items:
            type: string
    CustomFieldCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        value:
          type: array
          nullable: true
          items:
            type: object
            properties:
              id:
                type: integer
              title:
                type: string
                maxLength: 255
        entity:
          type: integer
          minimum: 0
          maximum: 2
          description: |
            Possible values:
            0 - case;
            1 - run;
            2 - defect;
        type:
          type: integer
          minimum: 0
          maximum: 9
          description: |
            Possible values:
            0 - number;
            1 - string;
            2 - text;
            3 - selectbox;
            4 - checkbox;
            5 - radio;
            6 - multiselect;
            7 - url;
            8 - user;
            9 - datetime;
        placeholder:
          type: string
          maxLength: 255
          nullable: true
        default_value:
          type: string
          maxLength: 255
          nullable: true
        is_filterable:
          type: boolean
        is_visible:
          type: boolean
        is_required:
          type: boolean
        projects_codes:
          type: array
          items:
            type: string
      required:
        - title
        - entity
        - type
        - projects_codes
    CustomFieldUpdate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        value:
          type: array
          nullable: true
          items:
            type: object
            properties:
              id:
                type: integer
              title:
                type: string
                maxLength: 255
        replace_values:
          type: object
          description: Dictionary of old values and their replacemants
          nullable: true
          additionalProperties: true
        placeholder:
          type: string
          maxLength: 255
          nullable: true
        default_value:
          type: string
          maxLength: 255
          nullable: true
        is_filterable:
          type: boolean
        is_visible:
          type: boolean
        is_required:
          type: boolean
        projects_codes:
          type: array
          items:
            type: string
      required:
        - title
        - projects_codes
    CustomFieldValue:
      type: object
      properties:
        id:
          type: integer
        value:
          type: string
    Defect:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        actual_result:
          type: string
        severity:
          type: integer
        status:
          type: integer
        milestone_id:
          type: integer
          nullable: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        deleted:
          type: string
          format: date-time
          nullable: true
        resolved:
          type: string
          format: date-time
          nullable: true
        project_id:
          type: integer
        member_id:
          type: integer
        external_data:
          type: string
    Project:
      type: object
      properties:
        title:
          type: string
        code:
          type: string
        counts:
          type: object
          properties:
            cases:
              type: integer
            suites:
              type: integer
            milestones:
              type: integer
            runs:
              type: object
              properties:
                total:
                  type: integer
                active:
                  type: integer
            defects:
              type: object
              properties:
                total:
                  type: integer
                open:
                  type: integer
    ProjectAccess:
      type: object
      properties:
        memeber_id:
          type: integer
          description: Team member id title.
    ProjectCreate:
      type: object
      properties:
        title:
          type: string
          description: Project title.
        code:
          type: string
          pattern: '^[a-zA-Z]{2,10}$'
          description: Project code. Unique for team. Digits and special characters are not allowed.
        description:
          type: string
          description: Project description.
        access:
          type: string
          enum:
            - all
            - group
            - none
        group:
          type: string
          description: Team group hash. Required if access param is set to group.
      required:
        - title
        - code
    TestCase:
      type: object
      properties:
        id:
          type: integer
        position:
          type: integer
        title:
          type: string
        description:
          type: string
        preconditions:
          type: string
        postconditions:
          type: string
        severity:
          type: integer
        priority:
          type: integer
        type:
          type: integer
        layer:
          type: integer
        is_flaky:
          type: integer
        behavior:
          type: integer
        automation:
          type: integer
        status:
          type: integer
        milestone_id:
          type: integer
          nullable: true
        suite_id:
          type: integer
          nullable: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        steps:
          type: array
          items:
            $ref: '#/components/schemas/TestStep'
        params:
          anyOf:
            - type: array
              items: {}
            - type: object
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
        deleted:
          type: string
          format: date-time
          nullable: true
        member_id:
          type: integer
        project_id:
          type: integer
    TestStep:
      type: object
      properties:
        hash:
          type: string
        shared_step_hash:
          type: string
          nullable: true
        shared_step_nested_hash:
          type: string
          nullable: true
        position:
          type: integer
        action:
          type: string
        expected_result:
          type: string
        data:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    CustomFieldResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/CustomField'
    CustomFieldsResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                total:
                  type: integer
                filtered:
                  type: integer
                count:
                  type: integer
                entities:
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomField'
    IdResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                id:
                  type: integer
    ProjectResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/Project'
    ProjectCodeResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                code:
                  type: string
    ProjectListResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                total:
                  type: integer
                filtered:
                  type: integer
                count:
                  type: integer
                entities:
                  type: array
                  items:
                    $ref: '#/components/schemas/Project'
    Response:
      type: object
      properties:
        status:
          type: boolean
        result:
          type: object
    SearchResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                entities:
                  type: array
                  items:
                    oneOf:
                      - $ref: '#/components/schemas/TestCase'
                      - $ref: '#/components/schemas/Defect'
  headers:
    Token:
      description: API Access Token
      schema:
        type: string
      required: true
  parameters:
    Code:
      name: code
      in: path
      description: 'Code of project, where to seacrh entities.'
      required: true
      schema:
        type: string
        minLength: 2
        maxLength: 10
    Id:
      name: id
      in: path
      description: Identifier.
      required: true
      schema:
        type: integer
    Limit:
      name: limit
      description: A number of entities in result set.
      in: query
      schema:
        type: integer
        default: 100
    Offset:
      name: offset
      description: How many entities should be skipped.
      in: query
      schema:
        type: integer
        default: 0
