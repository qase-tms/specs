openapi: 3.0.0
info:
  title: Qase.io API
  description: Qase API Specification.
  termsOfService: 'https://qase.io/terms'
  version: 1.0.0
  contact:
    name: Qase.io
    url: 'https://qase.io'
    email: support@qase.io
  license:
    name: Apache 2.0
    url: 'https://github.com/qase-tms/specs/blob/master/LICENSE'
tags:
  - name: attachments
  - name: cases
  - name: custom-fields
  - name: environments
  - name: defects
  - name: plans
  - name: projects
  - name: results
  - name: milestones
  - name: runs
  - name: search
  - name: shared-steps
  - name: suites
servers:
  - url: 'https://api.qase.io/v1'
    description: The production API server.
paths:
  /attachment:
    get:
      operationId: get-attachments
      tags:
        - attachments
      summary: Get all attachments.
      description: |
        This method allows to retrieve attachments.
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: A list of all attachments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentListResponse'
  '/attachment/{code}':
    post:
      operationId: upload-attachment
      tags:
        - attachments
      summary: Upload attachment.
      description: |
        This method allows to upload attachment to Qase.
        Max upload size:
        * Up to 32 Mb per file
        * Up to 128 Mb per single request
        * Up to 20 files per single request

        If there is no free space left in your team account,
        you will receive an error with code 507 - Insufficient Storage.
      parameters:
        - $ref: '#/components/parameters/Code'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: An attachments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentUploadsResponse'
  '/attachment/{hash}':
    get:
      operationId: get-attachment
      tags:
        - attachments
      summary: Get attachment by Hash.
      description: |
        This method allows to retrieve attachment by Hash.
      parameters:
        - $ref: '#/components/parameters/Hash'
      responses:
        '200':
          description: An attachments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentResponse'
    delete:
      operationId: delete-attachment
      tags:
        - attachments
      summary: Remove attachment by Hash.
      description: |
        This method allows to remove attachment by Hash.
      parameters:
        - $ref: '#/components/parameters/Hash'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashResponse'
  '/case/{code}':
    get:
      operationId: get-cases
      tags:
        - cases
      summary: Get all test cases.
      description: |
        This method allows to retrieve all test cases stored in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/FilterCases'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: A list of all projects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseListResponse'
    post:
      operationId: create-case
      tags:
        - cases
      summary: Create a new test case.
      description: |
        This method allows to create a new test case in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseCreate'
      responses:
        '200':
          description: A list of all projects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  '/case/{code}/{id}':
    get:
      operationId: get-case
      tags:
        - cases
      summary: Get a specific test case.
      description: |
        This method allows to retrieve a specific test case.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A Test Case.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestCaseResponse'
    delete:
      operationId: delete-case
      tags:
        - cases
      summary: Delete test case.
      description: |
        This method completely deletes a test case from repository.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A Test Case.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
    patch:
      operationId: update-case
      tags:
        - cases
      summary: Update test case.
      description: |
        This method updates a test case.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestCaseUpdate'
      responses:
        '200':
          description: A Test Case.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  /custom_field:
    get:
      operationId: get-custom-fields
      tags:
        - custom-fields
      summary: Get all Custom Fields.
      description: |
        This method allows to retrieve and filter custom fields.
      parameters:
        - $ref: '#/components/parameters/FilterCustomFields'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: Custom Field list.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldsResponse'
    post:
      operationId: create-custom-field
      tags:
        - custom-fields
      summary: Create new Custom Field.
      description: |
        This method allows to create custom field.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldCreate'
      responses:
        '200':
          description: Created Custom Field id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  '/custom_field/{id}':
    get:
      operationId: get-custom-field
      tags:
        - custom-fields
      summary: Get Custom Field by id.
      description: |
        This method allows to retrieve custom field.
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A Custom Field.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldResponse'
    delete:
      operationId: delete-custom-field
      tags:
        - custom-fields
      summary: Delete Custom Field by id.
      description: |
        This method allows to delete custom field.
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: Custom Field removal result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    patch:
      operationId: update-custom-field
      tags:
        - custom-fields
      summary: Update Custom Field by id.
      description: |
        This method allows to update custom field.
      parameters:
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldUpdate'
      responses:
        '200':
          description: Custom Field update result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  '/defect/{code}':
    get:
      operationId: get-defects
      tags:
        - defects
      summary: Get all defects.
      description: |
        This method allows to retrieve all defects stored in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/FilterDefects'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: A list of all defects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefectListResponse'
    post:
      operationId: create-defect
      tags:
        - defects
      summary: Create a new defect.
      description: |
        This method allows to create a defect in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefectCreate'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  '/defect/{code}/{id}':
    get:
      operationId: get-defect
      tags:
        - defects
      summary: Get a specific defect.
      description: |
        This method allows to retrieve a specific defect.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A defect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefectResponse'
    delete:
      operationId: delete-defect
      tags:
        - defects
      summary: Delete defect.
      description: |
        This method completely deletes a defect from repository.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A Result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
    patch:
      operationId: update-defect
      tags:
        - defects
      summary: Update defect.
      description: |
        This method updates a defect.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefectUpdate'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  '/defect/{code}/resolve/{id}':
    patch:
      operationId: resolve-defect
      tags:
        - defects
      summary: Resolve a specific defect.
      description: |
        This method allows to resolve a specific defect.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  '/defect/{code}/status/{id}':
    patch:
      operationId: update-defect-status
      tags:
        - defects
      summary: Update a specific defect status.
      description: |
        This method allows to update a specific defect status.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DefectStatus'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  '/environment/{code}':
    get:
      operationId: get-environments
      tags:
        - environments
      summary: Get all environments.
      description: |
        This method allows to retrieve all environments stored in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: A list of all environments.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentListResponse'
    post:
      operationId: create-environment
      tags:
        - environments
      summary: Create a new environment.
      description: |
        This method allows to create an environment in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentCreate'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  '/environment/{code}/{id}':
    get:
      operationId: get-environment
      tags:
        - environments
      summary: Get a specific environment.
      description: |
        This method allows to retrieve a specific environment.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: An environment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentResponse'
    delete:
      operationId: delete-environment
      tags:
        - environments
      summary: Delete environment.
      description: |
        This method completely deletes an environment from repository.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A Result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
    patch:
      operationId: update-environment
      tags:
        - environments
      summary: Update environment.
      description: |
        This method updates an environment.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentUpdate'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  '/milestone/{code}':
    get:
      operationId: get-milestones
      tags:
        - milestones
      summary: Get all milestones.
      description: |
        This method allows to retrieve all milestones stored in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/FilterMilestones'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: A list of all milestones.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MilestoneListResponse'
    post:
      operationId: create-milestone
      tags:
        - milestones
      summary: Create a new milestone.
      description: |
        This method allows to create a milestone in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MilestoneCreate'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  '/milestone/{code}/{id}':
    get:
      operationId: get-milestone
      tags:
        - milestones
      summary: Get a specific milestone.
      description: |
        This method allows to retrieve a specific milestone.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A Milestone.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MilestoneResponse'
    delete:
      operationId: delete-milestone
      tags:
        - milestones
      summary: Delete milestone.
      description: |
        This method completely deletes a milestone from repository.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A Result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
    patch:
      operationId: update-milestone
      tags:
        - milestones
      summary: Update milestone.
      description: |
        This method updates a milestone.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MilestoneUpdate'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  '/plan/{code}':
    get:
      operationId: get-plans
      tags:
        - plans
      summary: Get all plans.
      description: |
        This method allows to retrieve all plans stored in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: A list of all plans.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanListResponse'
    post:
      operationId: create-plan
      tags:
        - plans
      summary: Create a new plan.
      description: |
        This method allows to create a plan in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanCreate'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  '/plan/{code}/{id}':
    get:
      operationId: get-plan
      tags:
        - plans
      summary: Get a specific plan.
      description: |
        This method allows to retrieve a specific plan.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResponse'
    delete:
      operationId: delete-plan
      tags:
        - plans
      summary: Delete plan.
      description: |
        This method completely deletes a plan from repository.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A Result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
    patch:
      operationId: update-plan
      tags:
        - plans
      summary: Update plan.
      description: |
        This method updates a plan.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanUpdate'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  /project:
    get:
      operationId: get-projects
      tags:
        - projects
      summary: Get All Projects.
      description: |
        This method allows to retrieve all projects available
        for your account. You can limit and offset params
        to paginate.
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: A list of all projects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectListResponse'
    post:
      operationId: create-project
      tags:
        - projects
      summary: Create new project.
      description: |
        This method is used to create a new project through API.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
      responses:
        '200':
          description: A result of project creation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCodeResponse'
  '/project/{code}':
    get:
      operationId: get-project
      tags:
        - projects
      summary: Get Project by code.
      description: |
        This method allows to retrieve a specific project.
      parameters:
        - $ref: '#/components/parameters/Code'
      responses:
        '200':
          description: A Project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectResponse'
    delete:
      operationId: delete-project
      tags:
        - projects
      summary: Delete Project by code.
      description: |
        This method allows to delete a specific project.
      parameters:
        - $ref: '#/components/parameters/Code'
      responses:
        '200':
          description: A result of project removal.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  '/project/{code}/access':
    post:
      operationId: grant-access-to-project
      tags:
        - projects
      summary: Grant access to project by code.
      description: |
        This method allows to grant access to a specific project.
      parameters:
        - $ref: '#/components/parameters/Code'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectAccess'
      responses:
        '200':
          description: Result of operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
    delete:
      operationId: revoke-access-to-project
      tags:
        - projects
      summary: Revoke access to project by code.
      description: |
        This method allows to revoke access to a specific project.
      parameters:
        - $ref: '#/components/parameters/Code'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectAccess'
      responses:
        '200':
          description: Result of operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  '/result/{code}':
    get:
      operationId: get-results
      tags:
        - results
      summary: Get all test run results.
      description: |
        This method allows to retrieve all test run
        results stored in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/FilterResults'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: A list of all test run results.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultListResponse'
  '/result/{code}/{id}':
    post:
      operationId: create-result
      tags:
        - results
      summary: Create test run result.
      description: |
        This method allows to create test run result by Run Id.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultCreate'
      responses:
        '200':
          description: A result
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      result:
                        type: object
                        properties:
                          case_id:
                            type: integer
                            format: int64
                          hash:
                            type: string
  '/result/{code}/{hash}':
    get:
      operationId: get-result
      tags:
        - results
      summary: Get test run result by code.
      description: |
        This method allows to retrieve a specific test run result by Hash.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Hash'
      responses:
        '200':
          description: A test run result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultResponse'
  '/result/{code}/{id}/bulk':
    post:
      operationId: create-result-bulk
      tags:
        - results
      summary: Bulk create test run result.
      description: |
        This method allows to create a lot of test run result at once.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultCreateBulk'
      responses:
        '200':
          description: A result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  '/result/{code}/{id}/{hash}':
    patch:
      operationId: update-result
      tags:
        - results
      summary: Update test run result.
      description: |
        This method allows to update test run result.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Hash'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResultUpdate'
      responses:
        '200':
          description: A result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashResponse'
    delete:
      operationId: delete-result
      tags:
        - results
      summary: Delete test run result.
      description: |
        This method allows to delete test run result.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Hash'
      responses:
        '200':
          description: A result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashResponse'
  '/run/{code}':
    get:
      operationId: get-runs
      tags:
        - runs
      summary: Get all runs.
      description: |
        This method allows to retrieve all runs stored in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/FilterRuns'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/ExtendRuns'
      responses:
        '200':
          description: A list of all runs.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunListResponse'
    post:
      operationId: create-run
      tags:
        - runs
      summary: Create a new run.
      description: |
        This method allows to create a run in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunCreate'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  '/run/{code}/{id}':
    get:
      operationId: get-run
      tags:
        - runs
      summary: Get a specific run.
      description: |
        This method allows to retrieve a specific run.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/ExtendRuns'
      responses:
        '200':
          description: A run.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunResponse'
    delete:
      operationId: delete-run
      tags:
        - runs
      summary: Delete run.
      description: |
        This method completely deletes a run from repository.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A Result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  '/run/{code}/{id}/public':
    patch:
      operationId: update-run-publicity
      tags:
        - runs
      summary: Update publicity of a specific run.
      description: |
        This method allows to update a publicity of specific run.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunPublic'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunPublicResponse'
  '/run/{code}/{id}/complete':
    post:
      operationId: complete-run
      tags:
        - runs
      summary: Complete a specific run.
      description: |
        This method allows to complete a specific run.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
  /search:
    get:
      operationId: search
      tags:
        - search
      summary: Search entities by Qase Query Language (QQL).
      description: |
        This method allows to retrieve data sets for various
        entities using expressions with conditions.
      externalDocs:
        description: Find more info about QQL here.
        url: 'https://help.qase.io/hc/en-us/articles/4404615073041'
      parameters:
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
        - name: query
          in: query
          description: Expression in Qase Query Language.
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 1000
      responses:
        '200':
          description: A list of found entities.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
  '/shared_step/{code}':
    get:
      operationId: get-shared-steps
      tags:
        - shared-steps
      summary: Get all shared steps.
      description: |
        This method allows to retrieve all shared steps stored in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/FilterSharedSteps'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: A list of all shared steps.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedStepListResponse'
    post:
      operationId: create-shared-step
      tags:
        - shared-steps
      summary: Create a new shared step.
      description: |
        This method allows to create a shared step in selected project.
      parameters:
        - $ref: '#/components/parameters/Code'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedStepCreate'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashResponse'
  '/shared_step/{code}/{hash}':
    get:
      operationId: get-shared-step
      tags:
        - shared-steps
      summary: Get a specific shared step.
      description: |
        This method allows to retrieve a specific shared step.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Hash'
      responses:
        '200':
          description: A shared step.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedStepResponse'
    delete:
      operationId: delete-shared-step
      tags:
        - shared-steps
      summary: Delete shared step.
      description: |
        This method completely deletes a shared step from repository.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Hash'
      responses:
        '200':
          description: A Result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashResponse'
    patch:
      operationId: update-shared-step
      tags:
        - shared-steps
      summary: Update shared step.
      description: |
        This method updates a shared step.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Hash'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedStepUpdate'
      responses:
        '200':
          description: A result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HashResponse'
  '/suite/{code}':
    get:
      operationId: get-suites
      tags:
        - suites
      summary: Get all test suites.
      description: |
        This method allows to retrieve all test suites stored in selected project..
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/FilterSuites'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: A list of all suites of project.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuiteListResponse'
    post:
      operationId: create-suite
      tags:
        - suites
      summary: Create a new test suite.
      description: |
        This method is used to create a new test suite through API.
      parameters:
        - $ref: '#/components/parameters/Code'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuiteCreate'
      responses:
        '200':
          description: A list of all projects.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
  '/suite/{code}/{id}':
    get:
      operationId: get-suite
      tags:
        - suites
      summary: Get a specific test suite.
      description: |
        This method allows to retrieve a specific test suite.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      responses:
        '200':
          description: A Test Case.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuiteResponse'
    delete:
      operationId: delete-suite
      tags:
        - suites
      summary: Delete test suite.
      description: |
        This method completely deletes a test suite with test cases from repository.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuiteDelete'
      responses:
        '200':
          description: A result of operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
    patch:
      operationId: update-suite
      tags:
        - suites
      summary: Update test suite.
      description: |
        This method is used to update a test suite through API.
      parameters:
        - $ref: '#/components/parameters/Code'
        - $ref: '#/components/parameters/Id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuiteUpdate'
      responses:
        '200':
          description: A result of operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponse'
components:
  schemas:
    Attachment:
      type: object
      properties:
        size:
          type: integer
        mime:
          type: string
        filename:
          type: string
        url:
          type: string
          format: uri
    AttachmentGet:
      type: object
      properties:
        hash:
          type: string
        file:
          type: string
        mime:
          type: string
        size:
          type: integer
        extension:
          type: string
        full_path:
          type: string
          format: uri
    AttachmentHash:
      type: object
      properties:
        size:
          type: integer
        mime:
          type: string
        filename:
          type: string
        url:
          type: string
          format: uri
        hash:
          type: string
    AttachmentHashList:
      type: array
      description: A list of Attachment hashes.
      items:
        type: string
    CustomField:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        entity:
          type: string
        type:
          type: string
        placeholder:
          type: string
          nullable: true
        default_value:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        is_required:
          type: boolean
        is_visible:
          type: boolean
        is_filterable:
          type: boolean
        is_enabled_for_all_projects:
          type: boolean
        created:
          deprecated: true
          description: 'Deprecated, use the `created_at` property instead.'
          type: string
          example: '2021-12-30 19:23:59'
        updated:
          deprecated: true
          description: 'Deprecated, use the `updated_at` property instead.'
          type: string
          example: '2021-12-30 19:23:59'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        updated_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        projects_codes:
          type: array
          items:
            type: string
    CustomFieldCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        value:
          type: array
          nullable: true
          description: |
            Required if type one of:
            3 - selectbox;
            5 - radio;
            6 - multiselect;
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              title:
                type: string
                maxLength: 255
        entity:
          type: integer
          minimum: 0
          maximum: 2
          description: |
            Possible values:
            0 - case;
            1 - run;
            2 - defect;
        type:
          type: integer
          minimum: 0
          maximum: 9
          description: |
            Possible values:
            0 - number;
            1 - string;
            2 - text;
            3 - selectbox;
            4 - checkbox;
            5 - radio;
            6 - multiselect;
            7 - url;
            8 - user;
            9 - datetime;
        placeholder:
          type: string
          maxLength: 255
          nullable: true
        default_value:
          type: string
          maxLength: 255
          nullable: true
        is_filterable:
          type: boolean
        is_visible:
          type: boolean
        is_required:
          type: boolean
        is_enabled_for_all_projects:
          type: boolean
        projects_codes:
          type: array
          items:
            type: string
      required:
        - title
        - entity
        - type
    CustomFieldUpdate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        value:
          type: array
          nullable: true
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              title:
                type: string
                maxLength: 255
        replace_values:
          type: object
          description: Dictionary of old values and their replacemants
          nullable: true
          additionalProperties:
            type: string
        placeholder:
          type: string
          maxLength: 255
          nullable: true
        default_value:
          type: string
          maxLength: 255
          nullable: true
        is_filterable:
          type: boolean
        is_visible:
          type: boolean
        is_required:
          type: boolean
        is_enabled_for_all_projects:
          type: boolean
        projects_codes:
          type: array
          items:
            type: string
      required:
        - title
    CustomFieldValue:
      type: object
      properties:
        id:
          type: integer
          format: int64
        value:
          type: string
    Defect:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        actual_result:
          type: string
        severity:
          type: string
        status:
          type: string
        milestone_id:
          type: integer
          format: int64
          nullable: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        resolved_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
          nullable: true
        project_id:
          type: integer
          format: int64
        member_id:
          type: integer
          format: int64
        external_data:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagValue'
        created_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        updated_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        created:
          deprecated: true
          description: 'Deprecated, use the `created_at` property instead.'
          type: string
          example: '2021-12-30 19:23:59'
        updated:
          deprecated: true
          description: 'Deprecated, use the `updated_at` property instead.'
          type: string
          example: '2021-12-30 19:23:59'
    DefectCreate:
      type: object
      properties:
        title:
          type: string
        actual_result:
          type: string
        severity:
          type: integer
        milestone_id:
          type: integer
          format: int64
          nullable: true
        attachments:
          type: array
          items:
            type: string
        custom_field:
          type: object
          description: A map of custom fields values (id => value)
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            type: string
      required:
        - title
        - actual_result
        - severity
    DefectStatus:
      type: object
      properties:
        status:
          type: string
          enum:
            - in_progress
            - resolved
            - invalid
      required:
        - status
    DefectUpdate:
      type: object
      properties:
        title:
          type: string
        actual_result:
          type: string
        severity:
          type: integer
        milestone_id:
          type: integer
          format: int64
          nullable: true
        attachments:
          type: array
          items:
            type: string
        custom_field:
          type: object
          description: A map of custom fields values (id => value)
          additionalProperties:
            type: string
        tags:
          type: array
          items:
            type: string
    Environment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
          nullable: true
        slug:
          type: string
        host:
          type: string
          nullable: true
    EnvironmentCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
        slug:
          type: string
          maxLength: 255
        host:
          type: string
      required:
        - title
        - slug
    EnvironmentUpdate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
        slug:
          type: string
          maxLength: 255
        host:
          type: string
    Milestone:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
          nullable: true
        status:
          type: string
          enum:
            - completed
            - active
        due_date:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
          nullable: true
        created:
          deprecated: true
          description: 'Deprecated, use the `created_at` property instead.'
          type: string
          example: '2021-12-30 19:23:59'
        updated:
          deprecated: true
          description: 'Deprecated, use the `updated_at` property instead.'
          type: string
          example: '2021-12-30 19:23:59'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        updated_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
    MilestoneCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
        status:
          type: string
          enum:
            - completed
            - active
        due_date:
          type: integer
          format: int64
          description: unix timestamp
      required:
        - title
    MilestoneUpdate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - completed
            - active
    Plan:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
          nullable: true
        cases_count:
          type: integer
        created_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        updated_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        created:
          deprecated: true
          description: 'Deprecated, use the `created_at` property instead.'
          type: string
          example: '2021-12-30 19:23:59'
        updated:
          deprecated: true
          description: 'Deprecated, use the `updated_at` property instead.'
          type: string
          example: '2021-12-30 19:23:59'
    PlanCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        cases:
          type: array
          items:
            type: integer
            format: int64
      required:
        - title
        - cases
    PlanDetailed:
      allOf:
        - $ref: '#/components/schemas/Plan'
        - type: object
          properties:
            average_time:
              type: number
            cases:
              type: array
              items:
                type: object
                properties:
                  case_id:
                    type: integer
                    format: int64
                  assignee_id:
                    type: integer
                    format: int64
                    nullable: true
    PlanUpdate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        cases:
          type: array
          items:
            type: integer
            format: int64
    Project:
      type: object
      properties:
        title:
          type: string
        code:
          type: string
        counts:
          type: object
          properties:
            cases:
              type: integer
            suites:
              type: integer
            milestones:
              type: integer
            runs:
              type: object
              properties:
                total:
                  type: integer
                active:
                  type: integer
            defects:
              type: object
              properties:
                total:
                  type: integer
                open:
                  type: integer
    ProjectAccess:
      type: object
      properties:
        member_id:
          type: integer
          format: int64
          description: Team member id title.
    ProjectCreate:
      type: object
      properties:
        title:
          type: string
          description: Project title.
        code:
          type: string
          pattern: '^[a-zA-Z]{2,10}$'
          description: Project code. Unique for team. Digits and special characters are not allowed.
        description:
          type: string
          description: Project description.
        access:
          type: string
          enum:
            - all
            - group
            - none
        group:
          type: string
          description: Team group hash. Required if access param is set to group.
      required:
        - title
        - code
    Result:
      type: object
      properties:
        hash:
          type: string
        comment:
          type: string
          nullable: true
        stacktrace:
          type: string
          nullable: true
        run_id:
          type: integer
          format: int64
        case_id:
          type: integer
          format: int64
        steps:
          type: array
          nullable: true
          items:
            type: object
            properties:
              status:
                type: integer
              position:
                type: integer
              attachments:
                type: array
                items:
                  $ref: '#/components/schemas/Attachment'
        status:
          type: string
        is_api_result:
          type: boolean
        time_spent_ms:
          type: integer
          format: int64
        end_time:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
          nullable: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    ResultCreate:
      type: object
      properties:
        case_id:
          type: integer
          format: int64
        case:
          type: object
          description: Could be used instead of `case_id`.
          properties:
            title:
              type: string
            suite_title:
              type: string
              nullable: true
              description: Nested suites should be separated with `TAB` symbol.
            description:
              type: string
              nullable: true
            layer:
              type: string
            severity:
              type: string
        status:
          type: string
          enum:
            - in_progress
            - passed
            - failed
            - blocked
            - skipped
            - invalid
        time:
          type: integer
          format: int64
          nullable: true
          minimum: 0
          maximum: 31536000
        time_ms:
          type: integer
          format: int64
          nullable: true
          minimum: 0
          maximum: 31536000000
        defect:
          type: boolean
          nullable: true
        attachments:
          type: array
          nullable: true
          items:
            type: string
        stacktrace:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
        param:
          type: object
          nullable: true
          maxProperties: 1
          description: A map of parameters (name => value)
          additionalProperties:
            type: string
        steps:
          type: array
          nullable: true
          items:
            type: object
            properties:
              position:
                type: integer
              status:
                type: string
                enum:
                  - passed
                  - failed
                  - blocked
              comment:
                type: string
                nullable: true
              attachments:
                type: array
                nullable: true
                items:
                  type: string
              action:
                type: string
              expected_result:
                type: string
                nullable: true
              data:
                type: string
                nullable: true
            required:
              - position
              - status
      required:
        - status
    ResultCreateBulk:
      type: object
      properties:
        results:
          type: array
          maxItems: 2000
          items:
            $ref: '#/components/schemas/ResultCreate'
      required:
        - results
    ResultUpdate:
      type: object
      properties:
        status:
          type: string
          enum:
            - in_progress
            - passed
            - failed
            - blocked
            - skipped
        time_ms:
          type: integer
          format: int64
          nullable: true
          minimum: 0
          maximum: 31536000000
        defect:
          type: boolean
          nullable: true
        attachments:
          type: array
          nullable: true
          items:
            type: string
        stacktrace:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
        steps:
          type: array
          nullable: true
          items:
            type: object
            properties:
              position:
                type: integer
              status:
                type: string
                enum:
                  - passed
                  - failed
                  - blocked
              comment:
                type: string
                nullable: true
              attachments:
                type: array
                nullable: true
                items:
                  type: string
    Run:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
          nullable: true
        status:
          type: integer
        status_text:
          type: string
        start_time:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
          nullable: true
        end_time:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
          nullable: true
        public:
          type: boolean
        stats:
          type: object
          properties:
            total:
              type: integer
            untested:
              type: integer
            passed:
              type: integer
            failed:
              type: integer
            blocked:
              type: integer
            skipped:
              type: integer
            retest:
              type: integer
            in_progress:
              type: integer
            invalid:
              type: integer
        time_spent:
          type: integer
          format: int64
          description: Time in ms.
        environment:
          type: object
          properties:
            title:
              type: string
            description:
              type: string
            slug:
              type: string
            host:
              type: string
          nullable: true
        milestone:
          type: object
          properties:
            title:
              type: string
            description:
              type: string
          nullable: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagValue'
        cases:
          type: array
          items:
            type: integer
            format: int64
    RunCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 10000
        include_all_cases:
          type: boolean
        cases:
          type: array
          items:
            type: integer
            format: int64
        is_autotest:
          type: boolean
        environment_id:
          type: integer
          format: int64
          minimum: 1
        milestone_id:
          type: integer
          format: int64
          minimum: 1
        plan_id:
          type: integer
          format: int64
          minimum: 1
        tags:
          type: array
          items:
            type: string
        custom_field:
          type: object
          description: A map of custom fields values (id => value)
          additionalProperties:
            type: string
      required:
        - title
    RunPublic:
      type: object
      properties:
        status:
          type: boolean
      required:
        - status
    Requirement:
      type: object
      properties:
        id:
          type: integer
          format: int64
        parent_id:
          type: integer
          format: int64
          nullable: true
        member_id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
          nullable: true
        status:
          type: string
          enum:
            - valid
            - draft
            - review
            - rework
            - finish
            - implemented
            - not-testable
            - obsolete
        type:
          type: string
          enum:
            - epic
            - user-story
            - feature
        created_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        updated_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
          nullable: true
    SharedStep:
      type: object
      properties:
        hash:
          type: string
        title:
          type: string
        action:
          type: string
        expected_result:
          type: string
        steps:
          type: array
          items:
            type: object
            properties:
              data:
                type: string
              hash:
                type: string
              action:
                type: string
              expected_result:
                type: string
              attachments:
                type: array
                items:
                  $ref: '#/components/schemas/AttachmentHash'
        data:
          type: string
        cases:
          type: array
          items:
            type: integer
            format: int64
        cases_count:
          type: integer
        created:
          deprecated: true
          description: 'Deprecated, use the `created_at` property instead.'
          type: string
          example: '2021-12-30 19:23:59'
        updated:
          deprecated: true
          description: 'Deprecated, use the `updated_at` property instead.'
          type: string
          example: '2021-12-30 19:23:59'
        created_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        updated_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
    SharedStepCreate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        action:
          type: string
          deprecated: true
          description: 'Deprecated, use the `steps` property instead.'
        expected_result:
          type: string
          deprecated: true
          description: 'Deprecated, use the `steps` property instead.'
        data:
          type: string
          deprecated: true
          description: 'Deprecated, use the `steps` property instead.'
        steps:
          type: array
          items:
            type: object
            properties:
              hash:
                type: string
              action:
                type: string
              expected_result:
                type: string
              data:
                type: string
              attachments:
                $ref: '#/components/schemas/AttachmentHashList'
            required:
              - action
      required:
        - title
    SharedStepUpdate:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        action:
          type: string
          deprecated: true
          description: 'Deprecated, use the `steps` property instead.'
        expected_result:
          type: string
          deprecated: true
          description: 'Deprecated, use the `steps` property instead.'
        data:
          type: string
          deprecated: true
          description: 'Deprecated, use the `steps` property instead.'
        steps:
          type: array
          items:
            type: object
            properties:
              hash:
                type: string
              action:
                type: string
              expected_result:
                type: string
              data:
                type: string
              attachments:
                $ref: '#/components/schemas/AttachmentHashList'
            required:
              - action
      required:
        - title
    Suite:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
          nullable: true
        preconditions:
          type: string
          nullable: true
        position:
          type: integer
        cases_count:
          type: integer
        parent_id:
          type: integer
          format: int64
          nullable: true
        created:
          deprecated: true
          description: 'Deprecated, use the `created_at` property instead.'
          type: string
          example: '2021-12-30 19:23:59'
        updated:
          deprecated: true
          description: 'Deprecated, use the `updated_at` property instead.'
          type: string
          example: '2021-12-30 19:23:59'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        updated_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
    SuiteCreate:
      type: object
      properties:
        title:
          type: string
          description: Test suite title.
        description:
          type: string
          description: Test suite description.
        preconditions:
          type: string
          description: Test suite preconditions
        parent_id:
          type: integer
          format: int64
          description: Parent suite ID
          nullable: true
      required:
        - title
    SuiteUpdate:
      type: object
      properties:
        title:
          type: string
          description: Test suite title.
        description:
          type: string
          description: Test suite description.
        preconditions:
          type: string
          description: Test suite preconditions
        parent_id:
          type: integer
          format: int64
          description: Parent suite ID
          nullable: true
    SuiteDelete:
      type: object
      properties:
        destination_id:
          type: integer
          format: int64
          description: 'If provided, child test cases would be moved to suite with such ID.'
    TagValue:
      type: object
      properties:
        title:
          type: string
        internal_id:
          type: integer
          format: int64
    TestCase:
      type: object
      properties:
        id:
          type: integer
          format: int64
        position:
          type: integer
        title:
          type: string
        description:
          type: string
          nullable: true
        preconditions:
          type: string
          nullable: true
        postconditions:
          type: string
          nullable: true
        severity:
          type: integer
        priority:
          type: integer
        type:
          type: integer
        layer:
          type: integer
        is_flaky:
          type: integer
        behavior:
          type: integer
        automation:
          type: integer
        status:
          type: integer
        milestone_id:
          type: integer
          format: int64
          nullable: true
        suite_id:
          type: integer
          format: int64
          nullable: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        steps_type:
          type: string
          nullable: true
        steps:
          type: array
          items:
            $ref: '#/components/schemas/TestStep'
        params:
          anyOf:
            - type: array
              items: {}
            - type: object
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagValue'
        member_id:
          type: integer
          format: int64
        project_id:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        updated_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        deleted:
          deprecated: true
          type: string
          nullable: true
          example: '2021-12-30T19:23:59.000000Z'
        created:
          deprecated: true
          description: 'Deprecated, use the `created_at` property instead.'
          type: string
          example: '2021-12-30T19:23:59.000000Z'
        updated:
          deprecated: true
          description: 'Deprecated, use the `updated_at` property instead.'
          type: string
          example: '2021-12-30T19:23:59.000000Z'
    TestCaseCreate:
      type: object
      properties:
        description:
          type: string
        preconditions:
          type: string
        postconditions:
          type: string
        title:
          type: string
          maxLength: 255
        severity:
          type: integer
        priority:
          type: integer
        behavior:
          type: integer
        type:
          type: integer
        layer:
          type: integer
        is_flaky:
          type: integer
        suite_id:
          type: integer
          format: int64
        milestone_id:
          type: integer
          format: int64
        automation:
          type: integer
        status:
          type: integer
        attachments:
          $ref: '#/components/schemas/AttachmentHashList'
        steps:
          type: array
          items:
            type: object
            properties:
              action:
                type: string
              expected_result:
                type: string
              data:
                type: string
              position:
                type: integer
              attachments:
                $ref: '#/components/schemas/AttachmentHashList'
        tags:
          type: array
          items:
            type: string
        custom_field:
          type: object
          description: A map of custom fields values (id => value)
          additionalProperties:
            type: string
      required:
        - title
    TestCaseUpdate:
      type: object
      properties:
        description:
          type: string
        preconditions:
          type: string
        postconditions:
          type: string
        title:
          type: string
          maxLength: 255
        severity:
          type: integer
        priority:
          type: integer
        behavior:
          type: integer
        type:
          type: integer
        layer:
          type: integer
        is_flaky:
          type: integer
        suite_id:
          type: integer
          format: int64
        milestone_id:
          type: integer
          format: int64
        automation:
          type: integer
        status:
          type: integer
        attachments:
          $ref: '#/components/schemas/AttachmentHashList'
        steps:
          type: array
          items:
            type: object
            properties:
              action:
                type: string
              expected_result:
                type: string
              data:
                type: string
              position:
                type: integer
              attachments:
                $ref: '#/components/schemas/AttachmentHashList'
        tags:
          type: array
          items:
            type: string
        custom_field:
          type: object
          description: A map of custom fields values (id => value)
          additionalProperties:
            type: string
    TestStep:
      type: object
      properties:
        hash:
          type: string
        shared_step_hash:
          type: string
          nullable: true
        shared_step_nested_hash:
          type: string
          nullable: true
        position:
          type: integer
        action:
          type: string
        expected_result:
          type: string
          nullable: true
        data:
          type: string
          nullable: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    qql.Defect:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        actual_result:
          type: string
        severity:
          type: string
        status:
          type: string
        milestone_id:
          type: integer
          format: int64
          nullable: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        resolved:
          type: string
          format: date-time
          nullable: true
        project_id:
          type: integer
          format: int64
        member_id:
          type: integer
          format: int64
        external_data:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagValue'
        created_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        updated_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
    qql.TestCase:
      type: object
      properties:
        id:
          type: integer
          format: int64
        position:
          type: integer
        title:
          type: string
        description:
          type: string
          nullable: true
        preconditions:
          type: string
          nullable: true
        postconditions:
          type: string
          nullable: true
        severity:
          type: integer
        priority:
          type: integer
        type:
          type: integer
        layer:
          type: integer
        is_flaky:
          type: integer
        behavior:
          type: integer
        automation:
          type: integer
        status:
          type: integer
        milestone_id:
          type: integer
          format: int64
          nullable: true
        suite_id:
          type: integer
          format: int64
          nullable: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        steps_type:
          type: string
          nullable: true
        steps:
          type: array
          items:
            $ref: '#/components/schemas/TestStep'
        params:
          anyOf:
            - type: array
              items: {}
            - type: object
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagValue'
        member_id:
          type: integer
          format: int64
        project_id:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        updated_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
    qql.Plan:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
          nullable: true
        cases_count:
          type: integer
        created_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
        updated_at:
          type: string
          format: date-time
          example: '2021-12-30T19:23:59+00:00'
    AttachmentResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/AttachmentGet'
    AttachmentListResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                total:
                  type: integer
                filtered:
                  type: integer
                count:
                  type: integer
                entities:
                  type: array
                  items:
                    $ref: '#/components/schemas/AttachmentGet'
    AttachmentUploadsResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentGet'
    CustomFieldResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/CustomField'
    CustomFieldsResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                total:
                  type: integer
                filtered:
                  type: integer
                count:
                  type: integer
                entities:
                  type: array
                  items:
                    $ref: '#/components/schemas/CustomField'
    DefectResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/Defect'
    DefectListResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                total:
                  type: integer
                filtered:
                  type: integer
                count:
                  type: integer
                entities:
                  type: array
                  items:
                    $ref: '#/components/schemas/Defect'
    EnvironmentResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/Environment'
    EnvironmentListResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                total:
                  type: integer
                filtered:
                  type: integer
                count:
                  type: integer
                entities:
                  type: array
                  items:
                    $ref: '#/components/schemas/Environment'
    IdResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
    HashResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                hash:
                  type: string
    MilestoneResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/Milestone'
    MilestoneListResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                total:
                  type: integer
                filtered:
                  type: integer
                count:
                  type: integer
                entities:
                  type: array
                  items:
                    $ref: '#/components/schemas/Milestone'
    PlanResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/PlanDetailed'
    PlanListResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                total:
                  type: integer
                filtered:
                  type: integer
                count:
                  type: integer
                entities:
                  type: array
                  items:
                    $ref: '#/components/schemas/Plan'
    ProjectResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/Project'
    ProjectCodeResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                code:
                  type: string
    ProjectListResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                total:
                  type: integer
                filtered:
                  type: integer
                count:
                  type: integer
                entities:
                  type: array
                  items:
                    $ref: '#/components/schemas/Project'
    Response:
      type: object
      properties:
        status:
          type: boolean
    ResultResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/Result'
    ResultListResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                total:
                  type: integer
                filtered:
                  type: integer
                count:
                  type: integer
                entities:
                  type: array
                  items:
                    $ref: '#/components/schemas/Result'
    RunResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/Run'
    RunListResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                total:
                  type: integer
                filtered:
                  type: integer
                count:
                  type: integer
                entities:
                  type: array
                  items:
                    $ref: '#/components/schemas/Run'
    RunPublicResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                url:
                  type: string
                  format: uri
    SearchResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                entities:
                  type: array
                  items:
                    oneOf:
                      - $ref: '#/components/schemas/Run'
                      - $ref: '#/components/schemas/Result'
                      - $ref: '#/components/schemas/Requirement'
                      - $ref: '#/components/schemas/qql.TestCase'
                      - $ref: '#/components/schemas/qql.Defect'
                      - $ref: '#/components/schemas/qql.Plan'
    SharedStepResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/SharedStep'
    SharedStepListResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                total:
                  type: integer
                filtered:
                  type: integer
                count:
                  type: integer
                entities:
                  type: array
                  items:
                    $ref: '#/components/schemas/SharedStep'
    SuiteResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/Suite'
    SuiteListResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                total:
                  type: integer
                filtered:
                  type: integer
                count:
                  type: integer
                entities:
                  type: array
                  items:
                    $ref: '#/components/schemas/Suite'
    TestCaseResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/TestCase'
    TestCaseListResponse:
      allOf:
        - $ref: '#/components/schemas/Response'
        - type: object
          properties:
            result:
              type: object
              properties:
                total:
                  type: integer
                filtered:
                  type: integer
                count:
                  type: integer
                entities:
                  type: array
                  items:
                    $ref: '#/components/schemas/TestCase'
  securitySchemes:
    TokenAuth:
      type: apiKey
      in: header
      name: Token
  parameters:
    Code:
      name: code
      in: path
      description: 'Code of project, where to search entities.'
      required: true
      schema:
        type: string
        minLength: 2
        maxLength: 10
    ExtendRuns:
      name: include
      in: query
      description: |
        Include a list of related entities IDs into response. Should be separated by comma. Possible values: cases, defects
      schema:
        type: string
    FilterCases:
      name: filters
      in: query
      style: form
      explode: true
      schema:
        type: object
        properties:
          search:
            description: Provide a string that will be used to search by name.
            type: string
          milestone_id:
            description: ID of milestone.
            type: integer
          suite_id:
            description: ID of test suite.
            type: integer
          severity:
            description: |
              A list of severity values separated by comma.
              Possible values: undefined, blocker, critical,
              major, normal, minor, trivial
            type: string
          priority:
            description: |
              A list of priority values separated by comma.
              Possible values: undefined, high, medium, low
            type: string
          type:
            description: |
              A list of type values separated by comma.
              Possible values: other, functional smoke, regression,
              security, usability, performance, acceptance
            type: string
          behavior:
            description: |
              A list of behavior values separated by comma.
              Possible values: undefined, positive negative, destructive
            type: string
          automation:
            description: |
              A list of values separated by comma.
              Possible values: is-not-automated, automated to-be-automated
            type: string
          status:
            description: |
              A list of values separated by comma. Possible values: actual, draft deprecated
            type: string
    FilterCustomFields:
      name: filters
      in: query
      style: form
      explode: true
      schema:
        type: object
        properties:
          entity:
            type: string
            enum:
              - case
              - run
              - defect
          type:
            type: string
            enum:
              - string
              - text
              - number
              - checkbox
              - selectbox
              - radio
              - multiselect
              - url
              - user
              - datetime
    FilterDefects:
      name: filters
      in: query
      style: form
      explode: true
      schema:
        type: object
        properties:
          status:
            type: string
            enum:
              - open
              - resolved
              - in_progress
              - invalid
    FilterMilestones:
      name: filters
      in: query
      style: form
      explode: true
      schema:
        type: object
        properties:
          search:
            description: Provide a string that will be used to search by name.
            type: string
    FilterResults:
      name: filters
      in: query
      style: form
      explode: true
      schema:
        type: object
        properties:
          status:
            description: |
              A single test run result status.
              Possible values: in_progress, passed, failed, blocked, skipped, invalid.
            type: string
          run:
            type: string
            description: A list of run IDs separated by comma.
          case_id:
            type: string
            description: A list of case IDs separated by comma.
          member:
            type: string
            description: A list of member IDs separated by comma.
          api:
            type: boolean
          from_end_time:
            type: string
            description: |
              Will return all results created after provided datetime.
              Allowed format: `Y-m-d H:i:s`.
          to_end_time:
            type: string
            description: |
              Will return all results created before provided datetime.
              Allowed format: `Y-m-d H:i:s`.
    FilterRuns:
      name: filters
      in: query
      style: form
      explode: true
      schema:
        type: object
        properties:
          search:
            type: string
          status:
            description: |
              A list of status values separated by comma.
              Possible values: active, complete, abort.
            type: string
          milestone:
            type: integer
          environment:
            type: integer
          from_start_time:
            type: integer
            format: int64
          to_start_time:
            type: integer
            format: int64
    FilterSharedSteps:
      name: filters
      in: query
      style: form
      explode: true
      schema:
        type: object
        properties:
          search:
            description: Provide a string that will be used to search by name.
            type: string
    FilterSuites:
      name: filters
      in: query
      style: form
      explode: true
      schema:
        type: object
        properties:
          search:
            description: Provide a string that will be used to search by name.
            type: string
    Hash:
      name: hash
      in: path
      description: Hash.
      required: true
      schema:
        type: string
    Id:
      name: id
      in: path
      description: Identifier.
      required: true
      schema:
        type: integer
    Limit:
      name: limit
      description: A number of entities in result set.
      in: query
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 100
    Offset:
      name: offset
      description: How many entities should be skipped.
      in: query
      schema:
        type: integer
        default: 0
        minimum: 0
        maximum: 100000
security:
  - TokenAuth: []
